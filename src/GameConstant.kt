import Direction.*

object GameConstant {
    val blocksize = 24
    val nrofblocks = 15
    val scrsize = nrofblocks * blocksize
    val pacmanspeed = 6
    val validspeeds = intArrayOf(1, 2, 3, 4, 6, 8)
    val startMaze = arrayOf(
            19, 26, 26, 26, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 22,
            21,  0,  0,  0, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20,
            21,  0,  0,  0, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20,
            21,  0,  0,  0, 17, 16, 16, 24, 16, 16, 16, 16, 16, 16, 20,
            17, 18, 18, 18, 16, 16, 20,  0, 17, 16, 16, 16, 16, 16, 20,
            17, 16, 16, 16, 16, 16, 20,  0, 17, 16, 16, 16, 16, 24, 20,
            25, 16, 16, 16, 24, 24, 28,  0, 25, 24, 24, 16, 20,  0, 21,
            1, 17, 16, 20,  0,  0,  0,  0,  0,  0,  0, 17, 20,  0, 21,
            1, 17, 16, 16, 18, 18, 22,  0, 19, 18, 18, 16, 20,  0, 21,
            1, 17, 16, 16, 16, 16, 20,  0, 17, 16, 16, 16, 20,  0, 21,
            1, 17, 16, 16, 16, 16, 20,  0, 17, 16, 16, 16, 20,  0, 21,
            1, 17, 16, 16, 16, 16, 16, 18, 16, 16, 16, 16, 20,  0, 21,
            1, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20,  0, 21,
            1, 25, 24, 24, 24, 24, 24, 24, 24, 24, 16, 16, 16, 18, 20,
            9,  8,  8,  8,  8,  8,  8,  8,  8,  8, 25, 24, 24, 24, 28).map {
        var walls = emptyList<Direction>()
        if (it and 1 != 0) walls += Left
        if (it and 2 != 0) walls += Up
        if (it and 4 != 0) walls += Right
        if (it and 8 != 0) walls += Down
        MazeBlock(wallOnDirection = walls, haveDot = it and 16 != 0)
    }
}